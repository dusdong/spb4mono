@model IEnumerable<WorkExperience> 
@if (Model != null && Model.Count() > 0)
{
    <div class="tnc-experience-list tn-border-gray" id="UserWorks">
        @foreach (var work in Model)
        {
            <div  id="work_@(work.Id)" >
                <div class="tn-item tn-bg-gray tn-border-gray">
                    <div class="tn-actions">
                        @Html.Link("修改", "javascript:;", "修改", htmlAttributes: new { @class = "tn-action", id = "UpdateWork", onclick = "UserWorkInfoCallback(" + work.Id + ")" })
                        @Html.AjaxDeleteButton(new AjaxDeleteButton().SetConfirm("确认要删除工作经历吗 ? &nbsp;&nbsp;").SetText("删除").SetTooltip("删除工作经历").SetDeleteTarget("#work_" + work.Id).SetUrl(SiteUrls.Instance().DeleteUserWork(Url.SpaceKey(), work.Id)))
                    </div>
                    <div class="tn-row">
                        <strong class="tn-company">@(work.CompanyName)</strong> <em class="tn-location tn-text-note">
                            @if (!string.IsNullOrEmpty(work.CompanyAreaCode))
                            {
                                @Html.Raw("(")
                                @Formatter.FormatArea(work.CompanyAreaCode, true) 
                                @Html.Raw(")")
                            }
                        </em>
                        @{
                            string endDate = string.Empty;
                            if (work.EndDate.Year == DateTime.Now.Year)
                            { endDate = "至今"; }
                            else
                            { endDate = work.EndDate.Year.ToString(); }
                        }
                        <em class="tn-date">@(work.StartDate.Year)-@(endDate)</em><span class="tn-description">@(work.JobDescription)</span></div>
                </div>
            </div>
        }
    </div>
}